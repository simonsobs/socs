dist: xenial

services:
  - docker

language: python
python:
  - "3.6"

stages:
  - test
  - name: dockerize
    if: |
      branch = master AND \
      type = push

jobs:
  include:
    - stage: test
      install:
        # Build the docker images with docker-compose
        - docker-compose build

      script:
        # Run tests via pytest runner with coverage in a docker container
        - docker run -v $PWD:/coverage --rm socs sh -c "COVERAGE_FILE=/coverage/.coverage.docker python3 -m pytest -p no:wampy --cov /app/socs/socs/ ./tests/"

      after_success:
        # Install coveralls
        - pip install coveralls

        # Combine results from suffixed .coverage.docker to fix paths from container testing
        - coverage combine

        # Show report with updated paths
        - coverage report

        # Publish results to coveralls
        - coveralls

    - stage: dockerize
      install: true

      before_script:
        # Use the git tag to tag docker image
        - export DOCKER_TAG=`git describe --tags --always`
        # Login to docker
        - echo "${REGISTRY_PASSWORD}" | docker login -u "${REGISTRY_USER}" --password-stdin;

      script:
        # Build the docker images with docker-compose
        - docker-compose build

      after_success:
        # Tag all images for upload to the registry
        - "docker-compose config | grep 'image: ' | awk -F ': ' '{ print $2 }' | xargs -I {} docker tag {}:latest ${DOCKERHUB_ORG}/{}:latest"
        - "docker-compose config | grep 'image: ' | awk -F ': ' '{ print $2 }' | xargs -I {} docker tag {}:latest ${DOCKERHUB_ORG}/{}:${DOCKER_TAG}"

        # Upload to docker registry
        - "docker-compose config | grep 'image: ' | awk -F ': ' '{ print $2 }' | xargs -I {} docker push ${DOCKERHUB_ORG}/{}:${DOCKER_TAG}"
        - "docker-compose config | grep 'image: ' | awk -F ': ' '{ print $2 }' | xargs -I {} docker push ${DOCKERHUB_ORG}/{}:latest"
        - "docker-compose config | grep 'image: ' | awk -F ': ' '{ print $2 }' | xargs -I {} echo ${DOCKERHUB_ORG}/{}:${DOCKER_TAG} pushed"
